{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/Users/UsersList.js","components/Common/Home.js","components/Common/Register.js","components/Common/Login.js","components/templates/Navbar.js","components/Users/Profile.js","components/Users/EditProfile.js","components/private-route/PrivateRoute.js","components/Users/Dashboard.js","components/Applicant/AddEducation.js","components/Applicant/JobsList.js","components/Applicant/MyApplications.js","components/Recruiter/CreateJob.js","components/Recruiter/MyActiveJobs.js","components/Recruiter/AppList.js","components/Recruiter/Employees.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","devToolsExtension","f","UsersList","props","users","sortedUsers","sortName","renderIcon","bind","sortChange","get","then","response","setState","data","catch","error","console","log","array","this","flag","sort","a","b","undefined","date","Date","Grid","container","item","xs","md","lg","Paper","Table","TableHead","TableRow","TableCell","Button","onClick","TableBody","map","ind","key","substring","name","email","Component","Home","Jumbotron","fluid","Container","style","fontFamily","to","renderAs","width","borderRadius","letterSpacing","marginTop","className","Register","onChange","e","target","id","value","onSubmit","preventDefault","skills","role","length","split","newUser","password","password2","phone_number","registerUser","history","NaN","handleChange","event","push","nextProps","RoleForm","userRole","htmlFor","placeholder","paddingLeft","noValidate","classnames","invalid","connect","userData","post","res","alert","err","withRouter","Login","loginUser","emailnotfound","passwordincorrect","setItem","jwt_decode","NavBar","Navbar","bg","expand","Brand","href","src","alt","Toggle","aria-controls","Collapse","Nav","Link","Profile","onLogoutClick","userdetails","showform","editing","school","degree","startdate","file","delEducation","editEducation","editEducationSubmit","onBack","ed","idToRemove","_id","education","filter","put","location","reload","show","editid","toString","enddate","idToChange","findIndex","x","UserDetails","skill","Tooltip","title","aria-label","color","weight","bio","height","Card","Header","variant","Body","Title","Text","EditProfile","validate","nameError","emailError","bioError","includes","euser","skillsstring","editedUser","resume","jobs","recruiter","forEach","jobb","editJob","recruiterName","recruiterEmail","EditUserDetails","fontSize","component","rest","render","Dashboard","UserOptions","AddEducation","g1","g2","newEducation","userDetails","newed","JobsList","onFilter","jobTypeVal","jobTypeFilterVal","salaryMinVal","salaryFilterMinVal","salaryMaxVal","salaryFilterMaxVal","durationVal","durationFilterVal","parseInt","filteredJobs","extraJobs","salary","duration","onSearch","searchval","sval","result","Fuse","keys","search","n","i","applications","enteredsop","sopError","sortbysalary","sortbyduration","sortbyrating","renderSalaryIcon","renderDurationIcon","renderRatingIcon","sortBySalary","sortByDuration","sortByRating","apply","onSOPsubmit","rating","job","jobId","applicantId","status","numapp","working","goBack","newApplication","recruiterId","stage","sop","editApplicant","num","soperror","editting","AllJobs","monthNames","List","ListItem","text","TextField","fullWidth","InputProps","endAdornment","InputAdornment","IconButton","getTime","deadline","dateOfPost","getDate","getMonth","getFullYear","toFixed","applied","numpos","posmax","appmax","MyApplications","giveRating","sortedJobs","application","getjob","nrate","numrate","editApplication","AppliedJobs","doj","rated","Rating","rate","CreateJob","titleError","typeError","durationError","salaryError","addressError","deadlineError","appmaxError","address","skillstr","durationstr","newJob","description","app","AddJob","min","MyActiveJobs","deljob","editJobSubmit","applicationsArray","usersArray","delete","appli","editEmployee","applicant","nnumapp","editAppli","userid","pathname","Dropdown","Menu","Item","AppList","sortbyname","sortbydateofapply","renderNameIcon","renderDateOfApplyIcon","sortByName","sortByDateOfApply","accept","uusers","getapplicant","aapp","bapp","localeCompare","dateOfApply","tempAppli","nnumpos","Applications","innd","join","dateOfApplication","shortlist","reject","Employees","sortbytitle","sortbydateofjoin","renderTitleIcon","sortByTitle","sortByDateOfJoin","renderDateOfJoinIcon","applicantRating","jjobs","dateOfJoin","nrating","Myemployees","innnd","jwtToken","currentTime","now","exp","App","path","exact","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9a41fc6.chunk.js","sourcesContent":["import axios from \"axios\";\nconst setAuthToken = token => {\n    if (token) {\n        // Apply authorization token to every request if logged in\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        // Delete auth header\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\nexport default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n    GET_ERRORS,\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n    axios\n        .post(\"http://localhost:4000/user/register\", userData)\n        .then(res => alert(\"User registered successfully! You can log in now. \"),history.push(\"/register\")) // re-direct to login on successful register\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data,\n            })\n    );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n    axios\n    .post(\"http://localhost:4000/user/login\", userData)\n    .then(res => {\n        // Save to localStorage\n        // Set token to localStorage\n        const { token } = res.data;\n        localStorage.setItem(\"jwtToken\", token);\n        // Set token to Auth header\n        setAuthToken(token);\n        // Decode token to get user data\n        const decoded = jwt_decode(token);\n        // Set current user\n        dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n            dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    };\n};\n\n// User loading\nexport const setUserLoading = () => {\n    return {\n        type: USER_LOADING\n    };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n    // Remove token from local storage\n    localStorage.removeItem(\"jwtToken\");\n    // Remove auth header for future requests\n    setAuthToken(false);\n    // Set current user to empty object {} which will set isAuthenticated to false\n    dispatch(setCurrentUser({}));\n};","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import {\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n        return {\n            ...state,\n            isAuthenticated: !isEmpty(action.payload),\n            user: action.payload\n        };\n        case USER_LOADING:\n        return {\n            ...state,\n            loading: true\n        };\n        default:\n        return state;\n    }\n}","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\nexport default function(state = initialState, action) {\n    switch (action.type) {\n    case GET_ERRORS:\n        return action.payload;\n    default:\n        return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\nexport default combineReducers({\n    auth: authReducer,\n    errors: errorReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        window.devToolsExtension ? window.devToolsExtension() : f => f\n    )\n);\nexport default store;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\n\nclass UsersList extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {users: [],sortedUsers: [], sortName:true};\n        this.renderIcon = this.renderIcon.bind(this);\n        this.sortChange = this.sortChange.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/user')\n             .then(response => {\n                 this.setState({users: response.data, sortedUsers:response.data});\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n    }\n\n    sortChange(){\n        var array = this.state.users;\n        var flag = this.state.sortName;\n        array.sort(function(a, b) {\n            if(a.date !== undefined && b.date !== undefined){\n                return (1 - flag*2) * (new Date(a.date) - new Date(b.date));\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            users:array,\n            sortName:!this.state.sortName,\n        })\n    }\n    renderIcon(){\n        if(this.state.sortName){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid container>\n                    <Grid item xs={12} md={12} lg={12}>\n                        <Paper>\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                            <TableCell> <Button onClick={this.sortChange}>{this.renderIcon()}</Button>Date</TableCell>\n                                            <TableCell>Name</TableCell>\n                                            <TableCell>Email</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.users.map((user,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{user.date.substring(0,10)}</TableCell>\n                                            <TableCell>{user.name}</TableCell>\n                                            <TableCell>{user.email}</TableCell>\n                                        </TableRow>\n                                ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        )\n    }\n}\n\nexport default UsersList;","import React, {Component} from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { Jumbotron, Container, Button } from 'react-bootstrap';\n\nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            name:'',\n            email:''\n        }\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <Jumbotron fluid>\n                <Container>\n                    <h1 style={{ fontFamily: \"monospace\" }}>Welcome to JobsPlanet</h1>\n                    <p>\n                    <h6><b><i>The easiest way to find your dream job!</i></b></h6>\n                    </p>\n                    <Link to=\"/login\">\n                        <Button \n                            renderAs=\"button\"\n                            style={{\n                                width: \"150px\",\n                                borderRadius: \"3px\",\n                                letterSpacing: \"1.5px\",\n                                marginTop: \"1rem\"\n                            }}\n                        >\n                            <span>Login</span>\n                        </Button>\n                    </Link>\n                    <hr></hr>\n                    <h6 className=\"grey-text text-darken-1\">\n                        Don't have an account? <Link to=\"/register\">Register</Link>\n                    </h6>\n                </Container>\n            </Jumbotron>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            password2: \"\",\n            role: \"\",\n            phone_number: NaN,\n            skills: [],\n            errors: {}\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(event) {\n        this.setState({role: event.target.value});\n    }\n    componentDidMount() {\n        // If logged in and user navigates to Register page, should redirect them to dashboard\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n    onSubmit = e => {\n        e.preventDefault();\n        console.log(this.state.skills);\n        if(this.state.role === \"applicant\" && this.state.skills !== \"\" && this.state.skills.length !== 0)\n            this.state.skills = this.state.skills.split(',');\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password2: this.state.password2,\n            role: this.state.role,\n            phone_number: this.state.phone_number,\n            skills: this.state.skills\n        };\n        this.props.registerUser(newUser, this.props.history);\n        console.log(newUser);\n    };\n    render() {\n        const { errors } = this.state;\n        const userRole = this.state.role;\n        let RoleForm;\n        if(userRole === 'applicant') {\n            RoleForm = \n            <div>\n                <label htmlFor=\"skills\">Skills (comma-separated):</label><br></br>\n                <input\n                    onChange={this.onChange}\n                    value={this.state.skills}\n                    placeholder=\"Enter skills\"\n                    id=\"skills\"\n                    type=\"text\"\n                />\n            </div>\n        }\n        else if(userRole === 'recruiter') {\n            RoleForm = \n            <div>\n                <label htmlFor=\"phone_number\">Phone no.</label><br></br>\n                <input\n                    onChange={this.onChange}\n                    value={this.state.phone_number}\n                    id=\"phone_number\"\n                    type=\"number\"\n                />\n            </div>\n        }\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col s8 offset-s2\">\n                    <Link to=\"/\" className=\"btn-flat waves-effect\">\n                        <i className=\"material-icons left\"><b>keyboard_backspace</b></i>\n                    </Link>\n                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                        <h4>\n                        <b>Register</b>\n                        </h4>\n                        <p className=\"grey-text text-darken-1\">\n                        Already have an account? <Link to=\"/login\">Log in</Link>\n                        </p>\n                    </div>\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <div className=\"input-field col s12\">\n                                <label htmlFor=\"name\">Role</label><br></br>\n                                <select \n                                    value={this.state.role} \n                                    onChange={this.handleChange}\n                                    error={errors.role}\n                                    id=\"role\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.role\n                                        })}\n                                >\n                                    <option value=\"\">Select role</option>\n                                    <option value=\"applicant\">Applicant</option>\n                                    <option value=\"recruiter\">Recruiter</option>\n                                </select>\n                                <span className=\"red-text\">{errors.role}</span>\n                            </div> \n                            <div className=\"input-field col s12\">\n                                <label htmlFor=\"name\">Name</label><br></br>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.name}\n                                    error={errors.name}\n                                    id=\"name\"\n                                    type=\"text\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.name\n                                        })}\n                                />\n                                <span className=\"red-text\">{errors.name}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <label htmlFor=\"email\">Email</label><br></br>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.email}\n                                    error={errors.email}\n                                    id=\"email\"\n                                    type=\"email\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.email\n                                    })}\n                                />\n                                <span className=\"red-text\">{errors.email}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <label htmlFor=\"password\">Password</label><br></br>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password}\n                                    error={errors.password}\n                                    id=\"password\"\n                                    type=\"password\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.password\n                                    })}\n                                />\n                                <span className=\"red-text\">{errors.password}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <label htmlFor=\"password2\">Confirm Password</label><br></br>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password2}\n                                    error={errors.password2}\n                                    id=\"password2\"\n                                    type=\"password\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.password2\n                                    })}\n                                />\n                                <span className=\"red-text\">{errors.password2}</span>\n                            </div>\n                            <hr></hr>\n                            <div className=\"input-field col s12\">\n                                {RoleForm}\n                            </div>\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                                <button\n                                    style={{\n                                    width: \"150px\",\n                                    borderRadius: \"3px\",\n                                    letterSpacing: \"1.5px\",\n                                    marginTop: \"1rem\"\n                                    }}\n                                    type=\"submit\"\n                                    className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\n                                >\n                                    Sign up\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { registerUser }\n)(withRouter(Register));","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: {}\n        };\n    }\n    componentDidMount() {\n        // If logged in and user navigates to Login page, should redirect them to dashboard\n        if (this.props.auth.isAuthenticated) {\n          this.props.history.push(\"/dashboard\");\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.auth.isAuthenticated) {\n          this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n        }\n    if (nextProps.errors) {\n          this.setState({\n            errors: nextProps.errors\n          });\n        }\n    }\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n    onSubmit = e => {\n        e.preventDefault();\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n        this.props.loginUser(userData);\n        console.log(userData);\n    };\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"container\">\n                <div style={{ marginTop: \"4rem\" }} className=\"row\">\n                    <div className=\"col s8 offset-s2\">\n                        <Link to=\"/\" className=\"btn-flat waves-effect\">\n                            <i className=\"material-icons left\"><b>keyboard_backspace</b></i>\n                        </Link>\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                            <h4>\n                            <b>Login</b>\n                            </h4>\n                            <p className=\"grey-text text-darken-1\">\n                            Don't have an account? <Link to=\"/register\">Register</Link>\n                            </p>\n                        </div>\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <div className=\"input-field col s12\">\n                                <label htmlFor=\"email\">Email</label><br></br>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.email}\n                                    error={errors.email}\n                                    id=\"email\"\n                                    type=\"email\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.email || errors.emailnotfound\n                                    })}\n                                />\n                                <span className=\"red-text\">\n                                    {errors.email}\n                                    {errors.emailnotfound}\n                                </span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <label htmlFor=\"password\">Password</label><br></br>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password}\n                                    error={errors.password}\n                                    id=\"password\"\n                                    type=\"password\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.password || errors.passwordincorrect\n                                    })}\n                                />\n                                <span className=\"red-text\">\n                                    {errors.password}\n                                    {errors.passwordincorrect}\n                                </span>\n                            </div>\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                                <button\n                                    style={{\n                                    width: \"150px\",\n                                    borderRadius: \"3px\",\n                                    letterSpacing: \"1.5px\",\n                                    marginTop: \"1rem\"\n                                    }}\n                                    type=\"submit\"\n                                    className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\n                                >\n                                    Login\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { loginUser }\n)(Login);\n  ","import React, {Component} from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nexport default class NavBar extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"/\"><img src='/aaua.png' alt=\"aaua logo\" style={{ width: 50 }} /><b> AAUA-JOBS</b></Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"/\">Home</Nav.Link>\r\n                        <Nav.Link href=\"/profile\">My Profile</Nav.Link>\r\n                        <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nclass Profile extends Component {\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = \r\n        {\r\n            userdetails: [], \r\n            showform: false,\r\n            editing: \"\",\r\n            school: \"\",\r\n            degree: \"\",\r\n            startdate: new Date(),\r\n            file: null\r\n            // enddate: new Date(),\r\n        };\r\n        this.delEducation = this.delEducation.bind(this);\r\n        this.editEducation = this.editEducation.bind(this);\r\n        this.editEducationSubmit = this.editEducationSubmit.bind(this);\r\n        this.onBack = this.onBack.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { user } = this.props.auth;\r\n        axios.get('http://localhost:4000/user/'+ user.id)\r\n             .then(response => {\r\n                 this.setState({userdetails: response.data});\r\n             })\r\n             .catch(function(error) {\r\n                 console.log(error);\r\n             })\r\n    }\r\n\r\n    delEducation(ed) {\r\n        const { user } = this.props.auth;\r\n        const idToRemove = ed._id;\r\n        this.state.userdetails.education = this.state.userdetails.education.filter((item) => item._id !== idToRemove);\r\n        axios\r\n            .put('http://localhost:4000/user/edit_profile/' + user.id, this.state.userdetails)\r\n            .then(response => {\r\n                console.log(this.state.userdetails);\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n        // to refresh\r\n        window.location.reload();\r\n    }\r\n\r\n    editEducation(ed) {\r\n        let show = !this.state.showform;\r\n        this.setState({showform: show});\r\n        let editid = ed._id;\r\n        this.setState({editing: editid});\r\n        console.log(this.state.showform);\r\n        this.setState({ school: ed.school });\r\n        this.setState({ degree: ed.degree });\r\n        if(ed.startdate)\r\n        {\r\n            ed.startdate = ed.startdate.toString();\r\n            ed.startdate = ed.startdate.substring(0,10);\r\n            this.setState({ startdate: ed.startdate });\r\n        }\r\n        if(ed.enddate)\r\n        {\r\n            ed.enddate = ed.enddate.toString();\r\n            ed.enddate = ed.enddate.substring(0,10);\r\n            this.setState({ enddate: ed.enddate });\r\n        }\r\n        \r\n        // to refresh\r\n        // this.props.history.push('/profile');\r\n    }\r\n\r\n    onBack() {\r\n        let show = !this.state.showform;\r\n        this.setState({ showform: show});\r\n        this.setState({ editing: \"\" });\r\n        \r\n        // to refresh\r\n        window.location.reload();\r\n    }\r\n\r\n    editEducationSubmit(ed) {\r\n        const { user } = this.props.auth;\r\n        const idToChange = ed._id;\r\n        this.setState({ editing: \"\" });\r\n        const ind = this.state.userdetails.education.findIndex(x => x._id === idToChange)\r\n        if(this.state.school !== \"\")\r\n            this.state.userdetails.education[ind].school = this.state.school;\r\n        if(this.state.degree !== \"\")\r\n            this.state.userdetails.education[ind].degree = this.state.degree;\r\n        this.state.userdetails.education[ind].startdate = this.state.startdate;\r\n        if(this.state.enddate && new Date(this.state.enddate) <= new Date(this.state.startdate))\r\n        {\r\n            alert(\"End date ahould be after start date.\");\r\n        }\r\n        else {\r\n            this.state.userdetails.education[ind].enddate = this.state.enddate;\r\n            axios\r\n                .put('http://localhost:4000/user/edit_profile/' + user.id, this.state.userdetails)\r\n                .then(response => {\r\n                    console.log(this.state.userdetails);\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error);\r\n                })\r\n            // to refresh\r\n        }\r\n        let show = !this.state.showform;\r\n        this.setState({ showform: show});\r\n        // window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        const user = this.state.userdetails;\r\n        const userRole = user.role;\r\n        let UserDetails;\r\n        if(userRole === 'applicant') {\r\n            UserDetails = \r\n            <div>\r\n                 <ul>\r\n                    {/* <li>DP: {user.profile_image}</li> */}\r\n                    <li>Email: {user.email}</li>\r\n                    <li>Skills: \r\n                        <ul>\r\n                            {user.skills.map(skill => (\r\n                                <li>{skill}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </li>\r\n                    {/* <li>Resume: {user.resume}</li> */}\r\n                </ul>\r\n                <hr></hr>\r\n                <ul>\r\n                    <li>Education:\r\n                        <Tooltip title=\"Add Education\" aria-label=\"added\">\r\n                            <Link style={{ color: '#009900', weight: 'bold' }} to=\"/addeducation\"><i className=\"material-icons\"><h2> add</h2></i></Link>\r\n                        </Tooltip>\r\n                        <ul>\r\n                            {user.education.map(ed => (\r\n                                <li>\r\n                                    <ul>\r\n                                        <li>School: {ed.school}</li>\r\n                                        <li>Degree: {ed.degree}</li>\r\n                                        <li>Start date: {ed.startdate ? ed.startdate.toString().substring(0, 10): \"NA\"}</li>\r\n                                        <li>End date: {ed.enddate ? ed.enddate.toString().substring(0, 10):\"NA\"}</li>\r\n                                    </ul>\r\n                                    \r\n                                    <div>\r\n                                        { !this.state.showform || ed._id !== this.state.editing? \r\n                                            <div>\r\n                                                <Tooltip title=\"Delete Above Education\" aria-label=\"delete\">\r\n                                                <button\r\n                                                style={{\r\n                                                    color: \"#FF0000\",\r\n                                                    }}\r\n                                                    className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                    onClick={() => this.delEducation(ed)}>\r\n                                                    <i className=\"material-icons\">delete</i>\r\n                                                </button>\r\n                                                </Tooltip>\r\n                                                <Tooltip title=\"Edit Above Education\" aria-label=\"edit\">\r\n                                                <button\r\n                                                    style={{\r\n                                                    color: \"#0000FF\",\r\n                                                    }}\r\n                                                    className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                    onClick={() => this.editEducation(ed)}>\r\n                                                    <i className=\"material-icons\">edit</i>\r\n                                                </button>\r\n                                                </Tooltip>\r\n                                            </div>\r\n                                        : \r\n                                            <div>\r\n                                                <br></br>\r\n                                                <form noValidate onSubmit={this.onSubmit}>\r\n                                                    <div className=\"input-field col s12\">\r\n                                                        <label htmlFor=\"school\">School</label><br></br>\r\n                                                        <input\r\n                                                            onChange={this.onChange}\r\n                                                            value={this.state.school}\r\n                                                            id=\"school\"\r\n                                                            type=\"text\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"input-field col s12\">\r\n                                                        <label htmlFor=\"degree\">Degree</label><br></br>\r\n                                                        <input\r\n                                                            onChange={this.onChange}\r\n                                                            value={this.state.degree}\r\n                                                            id=\"degree\"\r\n                                                            type=\"text\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"input-field col s12\">\r\n                                                        <label htmlFor=\"startdate\">Start Date</label><br></br>\r\n                                                        <input\r\n                                                            onChange={this.onChange}\r\n                                                            value={this.state.startdate}\r\n                                                            id=\"startdate\"\r\n                                                            type=\"date\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"input-field col s12\">\r\n                                                        <label htmlFor=\"enddate\">End Date</label><br></br>\r\n                                                        <input\r\n                                                            onChange={this.onChange}\r\n                                                            value={this.state.enddate}\r\n                                                            id=\"enddate\"\r\n                                                            type=\"date\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                                                    <button\r\n                                                    style={{\r\n                                                        color: \"#0000FF\",\r\n                                                        }}\r\n                                                        className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                        onClick={() => this.onBack()}>\r\n                                                        <b>Back</b>\r\n                                                    </button>\r\n                                                    <button\r\n                                                    style={{\r\n                                                        color: \"#009900\",\r\n                                                        }}\r\n                                                        className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                        onClick={() => this.editEducationSubmit(ed)}>\r\n                                                        <b>Save</b>\r\n                                                    </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div> \r\n                                            \r\n                                         }\r\n                                    </div>\r\n                                    <br></br>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        }\r\n        else if(userRole === 'recruiter') {\r\n            UserDetails = \r\n            <ul>\r\n                <li>Bio: {user.bio}</li>\r\n                <li>Email: {user.email}</li>\r\n                <li>Contact No.: {user.phone_number}</li>\r\n            </ul>\r\n        }\r\n        return (\r\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 center-align\">\r\n                    <Card style={{ width: '100%' }}>\r\n                        <Card.Header>\r\n                            <Button variant=\"light\"><h4>My Profile</h4></Button>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Title>\r\n                                <p>\r\n                                    <b>{user.name}: </b>\r\n                                    <Tooltip title=\"Edit Profile\" aria-label=\"edit\">\r\n                                        <Link to=\"/editprofile\"><i className=\"material-icons\"> edit</i></Link>\r\n                                    </Tooltip>\r\n                                </p>\r\n                            </Card.Title>\r\n                            <Card.Text>\r\n                                {UserDetails}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfile.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n)(Profile);","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass EditProfile extends Component {\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userdetails: [], \n            jobs: [],\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            bio: \"\",\n            role: \"\",\n            resume: \"\",\n            phone_number: NaN,\n            skills: [],\n            skillsstring: \"\",\n            nameError: \"\",\n            emailError: \"\",\n            bioError: \"\"\n        };\n    }\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        axios.get('http://localhost:4000/user/'+ user.id)\n             .then(response => {\n                this.setState(\n                {\n                    name: response.data.name,\n                    email: response.data.email,\n                    password: response.data.password,\n                    role: response.data.role,\n                    phone_number: response.data.phone_number,\n                    bio: response.data.bio,\n                    resume: response.data.resume,\n                    skills: response.data.skills\n                });\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n        axios.get('http://localhost:4000/job/get_jobs')\n            .then(response => {\n                this.setState({jobs: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n    validate = () => {\n        const user = this.state;\n        let nameError = \"\";\n        let emailError = \"\";\n        let bioError = \"\";\n    \n        if (!this.state.name) {\n          nameError = \"Name cannot be blank\";\n        }\n    \n        if (!this.state.email.includes(\"@\")) {\n          emailError = \"Invalid email\";\n        }\n    \n        if (emailError || nameError) {\n          this.setState({ emailError, nameError });\n          return false;\n        }\n\n        if(user.role === \"recruiter\")\n        {\n            let num = this.state.bio.split(' ').length;\n            if(num > 250)\n            {\n                bioError = \"Bio cannot have more than 250 words.\";\n                this.setState({ bioError });\n                return false;\n            }\n        }\n    \n        return true;\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n        const { user } = this.props.auth;\n        const euser = this.state;\n        euser.skills = this.state.skillsstring.split(',');\n        const editedUser = {\n            name: euser.name,\n            email: euser.email,\n            password: euser.password,\n            password2: euser.password2,\n            role: euser.role,\n            phone_number: euser.phone_number,\n            bio: euser.bio,\n            resume: euser.resume,\n            skills: euser.skills\n        };\n        const isValid = this.validate();\n        if (isValid) {\n            axios\n                .put('http://localhost:4000/user/edit_profile/' + user.id, editedUser)\n                .then(response => {\n                    console.log(editedUser);this.props.history.push('/profile');\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n            this.state.jobs.filter(item => item.recruiter === user.id).forEach((jobb) => \n            {\n                const editJob = {\n                    recruiterName: euser.name,\n                    recruiterEmail: euser.email\n                }\n                axios\n                    .put('http://localhost:4000/job/edit_job/' + jobb._id, editJob)\n                    .then(response => {\n                        console.log(editJob);\n                    })\n                    .catch(function(error) {\n                        console.log(error);\n                    })\n            })\n        }\n    };\n\n    render() {\n        const user = this.state;\n        const userRole = user.role;\n        user.skillsstring = user.skills.toString()\n        let EditUserDetails;\n        if(userRole === 'applicant') {\n            EditUserDetails = \n            <form noValidate onSubmit={this.onSubmit}>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"name\">Name</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.name}\n                        id=\"name\"\n                        type=\"text\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"email\">Email</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.email}\n                        id=\"email\"\n                        type=\"email\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.emailError}\n                    </div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"skills\">Skills</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.skillsstring}\n                        id=\"skills\"\n                        type=\"text\"\n                    />\n                </div>\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                    <button\n                        style={{\n                        width: \"150px\",\n                        borderRadius: \"3px\",\n                        letterSpacing: \"1.5px\",\n                        marginTop: \"1rem\"\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\n                    >\n                        Save\n                    </button>\n                </div>\n            </form>\n        }\n        else if(userRole === 'recruiter') {\n            EditUserDetails = \n            <form noValidate onSubmit={this.onSubmit}>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"name\">Name</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.name}\n                        id=\"name\"\n                        type=\"text\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"bio\">Bio.</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.bio}\n                        id=\"bio\"\n                        type=\"text\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.bioError}\n                    </div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"phone_number\">Phone no.</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.phone_number}\n                        id=\"phone_number\"\n                        type=\"number\"\n                    />\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"email\">Email</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.email}\n                        id=\"email\"\n                        type=\"email\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.emailError}\n                    </div>\n                </div>\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                    <button\n                        style={{\n                        width: \"150px\",\n                        borderRadius: \"3px\",\n                        letterSpacing: \"1.5px\",\n                        marginTop: \"1rem\"\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\n                    >\n                        Save\n                    </button>\n                </div>\n            </form>\n        }\n        return (\n            <div style={{ height: \"75vh\" }} className=\"valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Header>\n                                <Button variant=\"light\"><h4>My Profile</h4></Button>\n                            </Card.Header>\n                            <Card.Body>\n                                <Card.Text>\n                                    {EditUserDetails}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(EditProfile);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n    <Route\n    {...rest}\n    render={props =>\n        auth.isAuthenticated === true ? (\n        <Component {...props} />\n        ) : (\n        <Redirect to=\"/login\" />\n        )\n    }\n    />\n);\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = \n        {\n            userdetails: [], \n        };\n    }\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        axios.get('http://localhost:4000/user/'+ user.id)\n             .then(response => {\n                 this.setState({userdetails: response.data});\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n    }\n\n    render() {\n        const { user } = this.props.auth;\n        let UserOptions;\n        if(this.state.userdetails.role === \"applicant\")\n        {\n            UserOptions = \n            <ul>\n                <li><a href=\"/profile\">My Profile</a></li>\n                <li><a href=\"/jobsList\">View Jobs</a></li>\n                <li><a href=\"/myApplications\">My Applications</a></li>\n            </ul>\n        }\n        else if(this.state.userdetails.role === \"recruiter\")\n        {\n            UserOptions = \n            <ul>\n                <li><a href=\"/profile\">My Profile</a></li>\n                <li><a href=\"/addJob\">Add Job</a></li>\n                <li><a href=\"/viewMyActiveJobs\">My Job Listings</a></li>\n                <li><a href=\"/employees\">Employees</a></li>\n            </ul>\n        }\n        return (\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        \n                        <h6>\n                            \n                        </h6>\n                        <Card style={{ width: '100%' }}>\n                            <Card.Header>\n                                <h4>\n                                    <b>Hey {user.name.split(\" \")[0]} !</b>\n                                </h4>\n                            </Card.Header>\n                            <Card.Body>\n                                <Card.Title>\n                                    <p className=\"flow-text grey-text text-darken-1\">\n                                    You are logged into the full-stack MERN app{\" \"}\n                                    <span style={{ fontFamily: \"monospace\" }}><b>JobsPlanet</b></span>\n                                    </p>\n                                </Card.Title>\n                                <Card.Text>\n                                    {UserOptions}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                        \n                        <br></br>\n                        <button\n                            style={{\n                            width: \"150px\",\n                            borderRadius: \"3px\",\n                            letterSpacing: \"1.5px\",\n                            marginTop: \"1rem\"\n                            }}\n                            onClick={this.onLogoutClick}\n                            className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\n                        >\n                            Logout\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(Dashboard);","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport Card from \"react-bootstrap/Card\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass AddEducation extends Component {\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            newed:[],\n            role: \"\",\n            school: \"\",\n            degree: \"\",\n            startdate: new Date(),\n            // enddate: new Date(),\n            userDetails: [],\n            errors: {}\n        };\n    }\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        axios.get('http://localhost:4000/user/'+ user.id)\n            .then(response => {\n                this.setState({userDetails: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n        const { user } = this.props.auth;\n        const newEducation = {\n            school: this.state.school,\n            degree: this.state.degree,\n            startdate: this.state.startdate,\n            enddate: this.state.enddate\n        };\n        var g1,g2;\n        if(newEducation.startdate && newEducation.enddate)\n        {\n            g1 = new Date(newEducation.startdate); \n            g2 = new Date(newEducation.enddate); \n        }\n        if(!newEducation.startdate || newEducation.school === \"\" || newEducation.degree === \"\")\n        {\n            alert(\"School, Degree and Start Date are required!\");\n        }\n        else if(newEducation.enddate && g2<g1)\n        {\n            alert(\"End date cannot be before start date.\");\n        }\n        else{\n            this.state.userDetails.education.push(newEducation);\n            axios\n                .put('http://localhost:4000/user/edit_profile/' + user.id, this.state.userDetails)\n                .then(response => {\n                    console.log(this.state.userDetails);this.props.history.push('/profile');\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n        }\n    };\n\n    render() {\n        const userRole = this.state.userDetails.role;\n        let AddEducation;\n        if(userRole === 'applicant') {\n            AddEducation = \n            <form noValidate onSubmit={this.onSubmit}>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"school\">School</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={this.state.school}\n                        id=\"school\"\n                        type=\"text\"\n                    />\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"degree\">Degree</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={this.state.degree}\n                        id=\"degree\"\n                        type=\"text\"\n                    />\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"startdate\">Start Date</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={this.state.startdate}\n                        id=\"startdate\"\n                        type=\"date\"\n                    />\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"enddate\">End Date</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={this.state.enddate}\n                        id=\"enddate\"\n                        type=\"date\"\n                    />\n                </div>\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                    <button\n                        style={{\n                        width: \"150px\",\n                        borderRadius: \"3px\",\n                        letterSpacing: \"1.5px\",\n                        marginTop: \"1rem\"\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\n                    >\n                        Save\n                    </button>\n                </div>\n            </form>\n        }\n        return (\n            <div style={{ height: \"75vh\" }} className=\"valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    {AddEducation}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAddEducation.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(AddEducation);","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport Fuse from 'fuse.js';\n\nclass JobsList extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            userdetails: [],\n            jobs: [],\n            extraJobs: [], \n            applications: [],\n            sortName:true, \n            recruiterName: \"\",\n            showform: false,\n            editing: \"\",\n            enteredsop: \"\",\n            sopError: \"\",\n            sortbysalary:true,\n            sortbyduration:true,\n            sortbyrating:true,\n            searchval: \"\",\n            jobTypeFilterVal: \"\",\n            salaryFilterMinVal: \"\",\n            salaryFilterMaxVal: \"\",\n            durationFilterVal: \"\"\n        };\n        this.renderSalaryIcon = this.renderSalaryIcon.bind(this);\n        this.renderDurationIcon = this.renderDurationIcon.bind(this);\n        this.renderRatingIcon = this.renderRatingIcon.bind(this);\n        this.sortBySalary = this.sortBySalary.bind(this);\n        this.sortByDuration = this.sortByDuration.bind(this);\n        this.sortByRating = this.sortByRating.bind(this);\n        this.onSearch = this.onSearch.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.apply = this.apply.bind(this);\n        this.onSOPsubmit = this.onSOPsubmit.bind(this);\n    }\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onFilter = e => {\n        let jobTypeVal = this.state.jobTypeFilterVal;\n        let salaryMinVal = this.state.salaryFilterMinVal;\n        let salaryMaxVal = this.state.salaryFilterMaxVal;\n        let durationVal = \"\";\n        if(this.state.durationFilterVal !== \"\")\n        {\n            durationVal = parseInt(this.state.durationFilterVal);\n        }\n        let filteredJobs = this.state.extraJobs;\n        if(jobTypeVal !== \"\" && jobTypeVal !== undefined)\n        {\n            filteredJobs = filteredJobs.filter(item => item.type === jobTypeVal);\n        }\n        if(salaryMinVal !== \"\" && salaryMinVal !== undefined)\n        {\n            filteredJobs = filteredJobs.filter(item => item.salary >= salaryMinVal);\n        }\n        if(salaryMaxVal !== \"\" && salaryMaxVal !== undefined)\n        {\n            filteredJobs = filteredJobs.filter(item => item.salary < salaryMaxVal);\n        }\n        if(durationVal !== \"\" && durationVal !== undefined)\n        {\n            filteredJobs = filteredJobs.filter(item => item.duration < durationVal);\n        }\n        this.setState({ jobs: filteredJobs });\n    };\n\n    onSearch = e => {\n        this.setState({ searchval : e.target.value });\n        let sval = this.state.searchval;\n        if(sval === \"\" || sval === undefined)\n        {\n            this.setState({ jobs : this.state.extraJobs });\n        }\n        else\n        {\n            const options = {\n                keys: [\"title\"]\n            };\n            const fuse = new Fuse(this.state.jobs, options);\n            let result = fuse.search(sval);\n            \n            // this.setState({ jobs : this.state.extraJobs.filter(item => item.title.includes(sval)) });\n            let n = result.length;\n            let i = 0;\n            let res = [];\n            for( i = 0; i < n; i++) {\n                res.push(result[i].item);\n            }\n            // console.log(res);\n            this.setState({ jobs : res });\n            // console.log(this.state.jobs);\n            \n        }\n    };\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        this.setState({ showform : false });\n        axios.get('http://localhost:4000/user/'+ user.id)\n                .then(response => {\n                    this.setState({userdetails: response.data});\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n        axios.get('http://localhost:4000/job/get_jobs')\n            .then(response => {\n                this.setState({jobs: response.data, extraJobs:response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/application/get_applications')\n            .then(response => {\n                this.setState({applications: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    sortBySalary(){\n        var array = this.state.jobs;\n        var flag = this.state.sortbysalary;\n        array.sort(function(a, b) {\n            if(a.salary !== undefined && b.salary !== undefined){\n                return (1 - +flag*2) * (+a.salary - +b.salary);\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            jobs:array,\n            sortbysalary:!this.state.sortbysalary,\n        })\n    }\n\n    sortByDuration(){\n        var array = this.state.jobs;\n        var flag = this.state.sortbyduration;\n        array.sort(function(a, b) {\n            if(a.duration !== undefined && b.duration !== undefined){\n                return (1 - +flag*2) * (+a.duration - +b.duration);\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            jobs:array,\n            sortbyduration:!this.state.sortbyduration,\n        })\n    }\n\n    sortByRating(){\n        var array = this.state.jobs;\n        var flag = this.state.sortbyrating;\n        array.sort(function(a, b) {\n            if(a.rating !== undefined && b.rating !== undefined){\n                return (1 - +flag*2) * (+a.rating - +b.rating);\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            jobs:array,\n            sortbyrating:!this.state.sortbyrating,\n        })\n    }\n\n    renderSalaryIcon(){\n        if(this.state.sortbysalary){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    renderDurationIcon(){\n        if(this.state.sortbyduration){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    renderRatingIcon(){\n        if(this.state.sortbyrating){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    applied(job) {\n        const { user } = this.props.auth;\n        let num = 0;\n        let arr = this.state.applications.filter(item => item.jobId === job._id && item.applicantId === user.id && (item.status === \"Applied\" || item.status === \"Shortlisted\" || item.status === \"Accepted\"));\n        num = arr.length;\n        if(num>0) return true;\n        else return false;\n    }\n\n    apply(job)\n    {\n        if(this.state.userdetails.numapp >= 10)\n        {\n            alert(\"Maximum open applications of 10 reached. Take a break!\");\n        }\n        else if(this.state.userdetails.working === true)\n        {\n            alert(\"You are already accepted into one of the jobs you applied for. Check My Applications page.\");\n        }\n        else\n        {\n            let show = !this.state.showform;\n            this.setState({ showform : show });\n            let editid = job._id;\n            this.setState({ editing : editid });\n            console.log(this.state.showform);\n            this.props.history.push('/jobsList');\n            this.props.history.push('/jobsList');\n            this.props.history.goBack();\n        }\n    }\n\n    onSOPsubmit(job)\n    {\n        const { user } = this.props.auth;\n        const newApplication = {\n            jobId: job._id,\n            applicantId: user.id,\n            recruiterId:job.recruiter,\n            stage: 0,\n            status: \"Applied\",\n            sop: this.state.enteredsop,\n            salary: job.salary,\n            recruiterName: job.recruiterName,\n            rating: -1,\n            title: job.title\n        };\n\n        let nnumapp = +job.numapp + 1;\n\n        const editJob = {\n            numapp: nnumapp \n        }\n\n        let appnumapp = +this.state.userdetails.numapp + 1;\n\n        const editApplicant = {\n            numapp:  appnumapp\n        }\n\n        let num = this.state.enteredsop.split(' ').length;\n\n        let soperror = \"\";\n        if(num>250)\n        {\n            soperror = \"Maximum 250 words allowed.\";\n            this.setState({sopError: soperror});\n        }\n\n        if(num <= 250 && this.state.userdetails.numapp <= 10)\n        {\n            axios\n                .post('http://localhost:4000/application/add_application', newApplication)\n                .then(response => {\n                    console.log(newApplication);\n                    alert(\"Application sent successfully!\");\n                })\n                .catch(function(error) {\n                    console.log(error);\n                    alert(\"Application could not be sent.\");\n                })\n            axios\n                .put('http://localhost:4000/job/edit_job/' + job._id, editJob)\n                .then(response => {\n                    console.log(editJob);\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n            axios\n                .put('http://localhost:4000/user/edit_profile/' + user.id, editApplicant)\n                .then(response => {\n                    console.log(editApplicant);\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n                this.setState({ editting : \"\" });\n            this.props.history.push('/jobsList');\n            this.props.history.push('/');\n            this.props.history.goBack();\n        }\n        else {\n            alert(\"SOP cannot have more than 250 words.\");\n        }\n    }\n    \n\n    render() \n    {\n        const userRole = this.state.userdetails.role;\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n        let AllJobs;\n        if(userRole === \"applicant\") {\n            AllJobs =\n            <div>\n                <Grid container>\n                <Grid item xs={12} md={12} lg={12}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <ListItem text>\n                            <h3>Active Jobs</h3>\n                        </ListItem>\n                    </List>\n                </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <TextField \n                        id=\"searchval\" \n                        onChange={this.onChange}\n                        value={this.state.searchval}\n                        placeholder=\"Fuzzy Search\"\n                        fullWidth={true}   \n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment>\n                                    \n                                    <IconButton onClick={this.onSearch}>\n                                        <SearchIcon />\n                                    </IconButton>\n                                   \n                                </InputAdornment>\n                            )}}\n                        />\n                    </List>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={12} md={12} lg={12}>\n                        Filters:\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n                            <select \n                                value={this.state.jobTypeFilterVal} \n                                onChange={this.onChange}\n                                id=\"jobTypeFilterVal\"\n                            >\n                                <option value=\"\">Select Job Type</option>\n                                <option value = \"fullTime\">Full-Time</option>\n                                <option value=\"partTime\">Part-Time</option>\n                                <option value=\"wfh\">Work from home</option>\n                            </select>\n                            {/* <TextField \n                                id=\"jobTypeFilterVal\" \n                                onChange={this.onChange}\n                                value={this.state.jobTypeFilterVal}\n                                placeholder=\"Job Type\"\n                                fullWidth={true}   \n                            /> */}\n                        </List>\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n                            <TextField \n                                id=\"salaryFilterMinVal\" \n                                onChange={this.onChange}\n                                value={this.state.salaryFilterMinVal}\n                                placeholder=\"Min Salary\"\n                                fullWidth={true}   \n                            />\n                            <TextField \n                                id=\"salaryFilterMaxVal\" \n                                onChange={this.onChange}\n                                value={this.state.salaryFilterMaxVal}\n                                placeholder=\"Max Salary\"\n                                fullWidth={true}   \n                            />\n                        </List>\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n                       \n                            <select \n                                value={this.state.durationFilterVal} \n                                onChange={this.onChange}\n                                id=\"durationFilterVal\"\n                            >\n                                <option value=\"\">Select duration</option>\n                                <option value = \"0\" >Indefinite</option>\n                                <option value=\"1\">1 month</option>\n                                <option value=\"2\">2 months</option>\n                                <option value=\"3\">3 months</option>\n                                <option value=\"4\">4 months</option>\n                                <option value=\"5\">5 months</option>\n                                <option value=\"6\">6 months</option>\n                            </select>\n                \n                            <hr></hr>\n                            <button onClick={this.onFilter}>\n                                Filter\n                            </button>\n                            <hr></hr>\n                        </List>\n                    </Grid>\n\n                    <Grid item xs={12} md={12} lg={12}>\n                        <Paper>\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                            <TableCell>Title</TableCell>\n                                            <TableCell>Recruiter</TableCell>\n                                            <TableCell>Type</TableCell>\n                                            <TableCell><Button onClick={this.sortBySalary}>{this.renderSalaryIcon()}</Button>Salary (per month)</TableCell>\n                                            <TableCell><Button onClick={this.sortByDuration}>{this.renderDurationIcon()}</Button>Duration(months): 0 for Indefinite</TableCell>\n                                            <TableCell>Date of posting</TableCell>\n                                            <TableCell>Deadline</TableCell>\n                                            <TableCell><Button onClick={this.sortByRating}>{this.renderRatingIcon()}</Button>Rating</TableCell>\n                                            \n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.jobs.filter(item => (new Date()).getTime() <= (new Date(item.deadline.substring(0,10))).getTime()).map((job,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{job.title}</TableCell>\n                                            <TableCell>{job.recruiterName}</TableCell>\n                                            <TableCell>{job.type === \"partTime\"? \"Part-Time\": \"\"}\n                                            {job.type === \"fullTime\"? \"Full-Time\": \"\"}\n                                            {job.type === \"wfh\"? \"Work from Home\": \"\"}</TableCell>\n                                            <TableCell>{job.salary}</TableCell>\n                                            <TableCell>{job.duration}</TableCell>\n                                            <TableCell>Day-{new Date(job.dateOfPost).getDate()}, Month-{monthNames[new Date(job.dateOfPost).getMonth()]}, Year-{new Date(job.dateOfPost).getFullYear()}</TableCell>\n                                            <TableCell>{job.deadline.substring(0,10)}</TableCell>\n                                            <TableCell>{job.rating? job.rating.toFixed(1): \"\"}<i className=\"material-icons\"><h6> star</h6></i></TableCell>\n                                    \n                                            {!this.applied(job) && job._id !== this.state.editing && !(job.numpos >= job.posmax || job.numapp >= job.appmax)?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"Apply for this job\" aria-label=\"apply\">\n                                                    <button\n                                                        className=\"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.apply(job)}>\n                                                        Apply\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            :\n\n                                            <div></div>\n\n                                            }\n                                            {this.applied(job)?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"Applied for this job\" aria-label=\"applied\">\n                                                    <button\n                                                        className=\"btn btn-secondary btn-sm waves-effect waves-light hoverable blue accent-3\">\n                                                        Applied\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            : <div></div>\n\n                                            }\n                                            {(job.numpos >= job.posmax || job.numapp >= job.appmax) && !this.applied(job)?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"No vacancy\" aria-label=\"full\">\n                                                    <button\n                                                        className=\"btn btn-danger disabled btn-sm waves-effect waves-light hoverable blue accent-3\">\n                                                        Full\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            :\n                                                <div></div>\n\n                                            }\n\n                                            {this.state.showform === true && job._id === this.state.editing?\n                                            <TableCell>\n                                                <div>\n                                                    <div className=\"input-field\">\n                                                        <label htmlFor=\"enteredsop\">Enter SOP:</label><br></br>\n                                                        <input\n                                                            onChange={this.onChange}\n                                                            value={this.state.enteredsop}\n                                                            id=\"enteredsop\"\n                                                            type=\"text\"\n                                                        />\n                                                    </div>\n                                                    <button\n                                                        className=\"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.onSOPsubmit(job)}>\n                                                        Submit\n                                                    </button>\n                                                </div>                                    \n                                            </TableCell>\n                                            : <TableCell></TableCell>\n                                            }\n\n                                            \n                                        </TableRow> \n                                ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        }\n        return (\n            <div style={{ height: \"75vh\" }} className=\"valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    {AllJobs}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nJobsList.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(JobsList);","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport Rating from '@material-ui/lab/Rating';\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\n\n\nclass MyApplications extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            userdetails: [],\n            applications: [],\n            rating: 0\n        };\n        this.giveRating = this.giveRating.bind(this);\n        // this.renderIcon = this.renderIcon.bind(this);\n        // this.sortChange = this.sortChange.bind(this);\n    }\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    giveRating(e) {\n        this.setState({rating: e.target.value});\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        axios.get('http://localhost:4000/user/'+ user.id)\n                .then(response => {\n                    this.setState({userdetails: response.data});\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n        axios.get('http://localhost:4000/job/get_jobs')\n            .then(response => {\n                this.setState({jobs: response.data, sortedJobs:response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/application/get_applications')\n            .then(response => {\n                this.setState({applications: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    rated(application) {\n        if(application.rating !== -1)return true;\n        return false;\n    }\n\n    getjob(jobId)\n    {\n        let job = this.state.jobs.filter(item => item._id === jobId)[0];\n        return job;\n    }\n\n    rate(application)\n    {\n        let job = this.getjob(application.jobId);\n        let nrate = job.numrate;\n        nrate = nrate + 1;\n        let nrating = 0;\n        if(job.rating === -1)\n        {\n            nrating = this.state.rating\n        }\n        else\n        {\n            nrating = ((+job.rating * (+nrate-1)) + +this.state.rating) / (+nrate);\n        }\n\n        const editJob = {\n            rating: nrating,\n            numrate: nrate\n        };\n\n        const editApplication = {\n            rating: this.state.rating\n        };\n\n        axios\n            .put('http://localhost:4000/job/edit_job/' + job._id, editJob)\n            .then(response => {\n                console.log(editJob);\n                alert(\"Job rated successfully!\");\n            })\n            .catch(function(error) {\n                console.log(error);\n                alert(\"Job could not be rated.\");\n            })\n\n        axios\n            .put('http://localhost:4000/application/edit_application/' + application._id, editApplication)\n            .then(response => {\n                console.log(editApplication);\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n\n        window.location.reload();\n    \n    }\n\n    render() \n    {\n        const { user } = this.props.auth;\n        const userRole = this.state.userdetails.role;\n        let AppliedJobs;\n        if(userRole === \"applicant\") {\n            AppliedJobs =\n            <div>\n                <Grid container>\n                <Grid item xs={12} md={3} lg={3}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <ListItem text>\n                            <h3>My Applications</h3>\n                        </ListItem>\n                    </List>\n                </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={12} md={12} lg={12}>\n                        <Paper>\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                            <TableCell>Title</TableCell>\n                                            <TableCell>Status</TableCell>\n                                            <TableCell>Date of Joining</TableCell>\n                                            <TableCell>Salary (per month)</TableCell>\n                                            <TableCell>Recruiter</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.applications.filter(item => item.applicantId === user.id).map((application,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{application.title}</TableCell>\n                                            <TableCell>{application.status}</TableCell>\n                                            <TableCell>{application.doj? application.doj.substring(0,10) : \"\"}</TableCell>\n                                            <TableCell>{application.salary}</TableCell>\n                                            <TableCell>{application.recruiterName}</TableCell>\n                                           \n                                            {!this.rated(application) && application.status === \"Accepted\"?\n                                            \n                                            <TableCell>\n                                                <Rating\n                                                    value={this.state.rating}\n                                                    onChange={this.giveRating}\n                                                />\n                                                <Tooltip title=\"Rate this job\" aria-label=\"apply\">\n                                                    <button\n                                                        className=\"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.rate(application)}>\n                                                        Rate\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            :\n\n                                            <TableCell>\n                                                <div>{application.rating !== -1? \"Rated\" : \"\"}</div>                                           \n                                            </TableCell>\n\n                                            }\n                                            \n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        }\n        return (\n            <div style={{ height: \"75vh\" }} className=\"valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    {AppliedJobs}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMyApplications.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(MyApplications);","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport Card from \"react-bootstrap/Card\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass CreateJob extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userdetails: [],\n            recruiter: [],\n            recruiterName: \"\",\n            title: \"\",\n            titleError: \"\",\n            description: \"\",\n            type: \"\",\n            typeError: \"\",\n            duration: -1,\n            durationError: \"\",\n            durationstr: \"\",\n            salary: -1,\n            salaryError: \"\",\n            posmax: 1,\n            appmax: 10,\n            appmaxError: \"\",\n            numpos: 0,\n            numapp: 0,\n            app: 0,\n            address: \"\",\n            addressError: \"\",\n            skills: [],\n            skillstr: \"\",\n            rating: 0,\n            numrate: 0,\n            dateOfPost: new Date(),\n            // default 100 days from now\n            deadline: new Date(new Date().getTime()+(100*24*60*60*1000)),\n            deadlineError: \"\",\n        }\n    };\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        axios.get('http://localhost:4000/user/'+ user.id)\n             .then(response => {\n                 this.setState({userdetails: response.data});\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n    }\n\n    validate = () => {\n        let titleError = \"\";\n        let typeError = \"\";\n        let durationError = \"\";\n        let salaryError = \"\";\n        let addressError = \"\";\n        let deadlineError = \"\";\n        let appmaxError = \"\";\n\n    \n        if (this.state.title === \"\") {\n          titleError = \"Title cannot be blank\";\n        }\n\n        if (this.state.type === \"\") {\n            typeError = \"Select type of job\";\n        }\n\n        if (this.state.duration === -1) {\n            durationError = \"Select duration of job\";\n        }\n\n        if (this.state.salary === -1) {\n            salaryError = \"Enter Salary\";\n        }\n    \n        if (this.state.address === \"\") {\n            addressError = \"Address cannot be blank\";\n        }\n\n        if (new Date(this.state.deadline) < new Date().getTime()) {\n            deadlineError = \"Deadline cannot be before tomorrow\";\n        }\n\n        if (this.state.appmax < this.state.posmax) {\n            appmaxError = \"Maximum number of applications cannot be less than maximum number of positions.\";\n        }\n    \n        if (titleError || typeError || durationError || salaryError\n            || addressError || deadlineError || appmaxError) {\n            this.setState({ titleError, typeError, durationError, salaryError, addressError, deadlineError, appmaxError });\n            return false;\n        }\n    \n        return true;\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n        let euser = this.state;\n        euser.skills = this.state.skillstr.split(',');\n        if(euser.durationstr !== \"\")\n        {\n            euser.duration = parseInt(euser.durationstr);\n        }\n        const newJob = {\n            recruiter: this.state.userdetails,\n            recruiterName: this.state.userdetails.name,\n            title: euser.title,\n            description: euser.description,\n            type: euser.type,\n            duration: euser.duration,\n            salary: euser.salary,\n            posmax: euser.posmax,\n            appmax: euser.appmax,\n            numpos: euser.numpos,\n            numapp: euser.numapp,\n            app: euser.app,\n            address: euser.address,\n            skills: euser.skills,\n            rating: euser.rating,\n            numrate: euser.numrate,\n            dateOfPost: euser.dateOfPost,\n            deadline: euser.deadline\n        };\n        const isValid = this.validate();\n        if (isValid) {\n            axios\n                .post('http://localhost:4000/job/add_job', newJob)\n                .then(response => {\n                    console.log(newJob);\n                    alert(\"Job added successfully!\");\n                    // to refresh\n                    this.props.history.push(\"/viewMyActiveJobs\");\n                    this.props.history.push(\"/viewMyActiveJobs\");\n                    this.props.history.goBack();\n                })\n                .catch(function(error) {\n                    console.log(error);\n                    alert(\"Job NOT added successfully!\");\n                })\n        }\n    };\n\n    render() {\n        const user = this.state;\n        const userRole = this.state.userdetails.role;\n        let AddJob;\n        if(userRole === \"recruiter\") {\n            AddJob = \n            <form noValidate onSubmit={this.onSubmit}>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"title\">Title</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.title}\n                        id=\"title\"\n                        type=\"text\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.titleError}\n                    </div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"description\">Description</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.description}\n                        id=\"description\"\n                        type=\"text\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"type\">Type</label><br></br>\n                    <select \n                        value={this.state.type} \n                        onChange={this.onChange}\n                        id=\"type\"\n                    >\n                        <option value=\"\">Select type</option>\n                        <option value=\"fullTime\">Full-time</option>\n                        <option value=\"partTime\">Part-time</option>\n                        <option value=\"wfh\">Work from home</option>\n                    </select>\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.typeError}\n                    </div>\n                </div> \n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"salary\">Salary</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.salary}\n                        id=\"salary\"\n                        type=\"number\"\n                        min=\"-1\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.salaryError}\n                    </div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"durationstr\">Duration</label><br></br>\n                    <select \n                        value={this.state.durationstr} \n                        onChange={this.onChange}\n                        id=\"durationstr\"\n                    >\n                        <option value=\"\">Select duration</option>\n                        <option value = \"0\" >Indefinite</option>\n                        <option value=\"1\">1 month</option>\n                        <option value=\"2\">2 months</option>\n                        <option value=\"3\">3 months</option>\n                        <option value=\"4\">4 months</option>\n                        <option value=\"5\">5 months</option>\n                        <option value=\"6\">6 months</option>\n                    </select>\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.durationError}\n                    </div>\n                </div> \n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"posmax\">Max. no. of positions available</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.posmax}\n                        id=\"posmax\"\n                        type=\"number\"\n                        min=\"0\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"appmax\">Max. total no. applications allowed</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.appmax}\n                        id=\"appmax\"\n                        type=\"number\"\n                        min=\"0\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.appmaxError}\n                    </div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"address\">Address</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.address}\n                        id=\"address\"\n                        type=\"text\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.addressError}\n                    </div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"skillstr\">Skills</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.skillstr}\n                        id=\"skillstr\"\n                        type=\"text\"\n                    />\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"deadline\">Deadline (default: 100 days from now)</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.deadline}\n                        id=\"deadline\"\n                        type=\"date\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.deadlineError}\n                    </div>\n                </div>\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                    <button\n                        style={{\n                        width: \"150px\",\n                        borderRadius: \"3px\",\n                        letterSpacing: \"1.5px\",\n                        marginTop: \"1rem\"\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\n                    >\n                        Add Job\n                    </button>\n                </div>\n            </form>\n        }\n        \n        return (\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    {AddJob}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCreateJob.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(CreateJob);","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Link } from \"react-router-dom\";\n\n\n\nclass MyActiveJobs extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            userdetails: [],\n            users: [],\n            applications: [],\n            jobs: [],\n            sortedJobs: [], \n            sortName:true, \n            showform: false,\n            posmax: -1,\n            appmax: -1,\n            deadline: new Date(),\n            editing: \"\"\n        };\n        this.deljob = this.deljob.bind(this);\n        this.editJob = this.editJob.bind(this);\n        this.editJobSubmit = this.editJobSubmit.bind(this);\n    }\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        axios.get('http://localhost:4000/user/'+ user.id)\n                .then(response => {\n                    this.setState({userdetails: response.data});\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n        axios.get('http://localhost:4000/job/get_jobs')\n            .then(response => {\n                this.setState({jobs: response.data, sortedJobs:response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/user/')\n            .then(response => {\n                this.setState({users: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/application/get_applications')\n            .then(response => {\n                this.setState({applications: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    deljob(id) {\n        let applicationsArray = this.state.applications;\n        let usersArray = this.state.users;\n        axios\n            .delete('http://localhost:4000/job/del_job/' + id)\n            .then(response => {\n                alert(\"Job deleted successfully.\");\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n\n        applicationsArray.filter(item => item.jobId === id && item.status === \"Accepted\").forEach(\n            function(appli) \n            {\n                const editEmployee = {\n                    working: false\n                }\n                axios\n                    .put('http://localhost:4000/user/edit_profile/' + appli.applicantId, editEmployee)\n                    .then(response => {\n                        console.log(editEmployee);\n                    })\n                    .catch(function(error) {\n                        console.log(error);\n                    })\n            })\n    \n        applicationsArray.filter(item => item.jobId === id).forEach(\n            function(appli) \n            {\n                let applicant = usersArray.filter(item => item._id === appli.applicantId)[0];\n                let nnumapp = +applicant.numapp;\n\n                if(applicant.working === false)\n                {\n                    nnumapp = +nnumapp - 1;\n                    if(nnumapp < 0) nnumapp = 0;\n                }\n\n                const editApplicant = {\n                    numapp: nnumapp\n                };\n\n                axios\n                    .put('http://localhost:4000/user/edit_profile/' + appli.applicantId, editApplicant)\n                    .then(response => {\n                        console.log(editApplicant);\n                    })\n                    .catch(function(error) {\n                        console.log(error);\n                    })\n\n                const editAppli = {\n                    status: \"Deleted\"\n                }\n\n                axios\n                    .put('http://localhost:4000/application/edit_application/' + appli._id, editAppli)\n                    .then(response => {\n                        console.log(editAppli);\n                    })\n                    .catch(function(error) {\n                        console.log(error);\n                    })\n            })\n\n        \n        // to refresh\n        this.props.history.push('/viewMyActiveJobs');\n        this.props.history.push('/viewMyActiveJobs');\n        this.props.history.goBack();\n        window.location.reload();\n        \n    }\n\n    editJob(job) {\n        let show = !this.state.showform;\n        this.setState({ showform: show});\n        this.setState({ editing: job._id });\n        console.log(this.state.showform);\n        this.setState({ appmax: job.appmax });\n        this.setState({ posmax: job.posmax });\n        if(job.deadline)\n        {\n            job.deadline = job.deadline.toString();\n            job.deadline = job.deadline.substring(0,10);\n            this.setState({ deadline: job.deadline });\n        }\n        // to refresh\n        // this.props.history.push('/viewMyActiveJobs');\n    }\n\n    onBack() {\n        let show = !this.state.showform;\n        this.setState({ showform: show});\n        this.setState({ editing: \"\" });\n        \n        // to refresh\n        this.props.history.push('/viewMyActiveJobs');\n    }\n\n    editJobSubmit(job) {\n        const idToChange = job._id;\n        const ind = this.state.jobs.findIndex(x => x._id === idToChange)\n        \n        if(this.state.deadline)\n            this.state.jobs[ind].deadline = this.state.deadline;\n        if(this.state.appmax < this.state.posmax)\n        {\n            alert(\"Max. no. of applications cannot be less than the max. no. of positions.\");\n        }\n        else\n        {\n            if(this.state.appmax)\n                this.state.jobs[ind].appmax = this.state.appmax;\n            if(this.state.posmax)\n                this.state.jobs[ind].posmax = this.state.posmax;\n            axios\n                .put('http://localhost:4000/job/edit_job/' + idToChange, this.state.jobs[ind])\n                .then(response => {\n                    console.log(this.state.jobs[ind]);\n                    this.setState({ editing: \"\" });\n                })\n                .catch(function(error) {\n                    alert(\"Job couldn't be updated!\");\n                    console.log(error);\n                })\n        }\n        // to refresh\n        \n        let show = !this.state.showform;\n        this.setState({ showform: show});\n        // window.location.reload();\n    }\n\n\n    render() \n    {\n        const userRole = this.state.userdetails.role;\n        const userid = this.state.userdetails._id;\n        let MyActiveJobs;\n        if(userRole === \"recruiter\") {\n            MyActiveJobs =\n            <div>\n                <Grid>\n                <Grid item xs={12} md={3} lg={3}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <ListItem text>\n                            <h3>My Jobs Listing </h3>\n                            <Tooltip title=\"Add Job\" aria-label=\"added\">\n                            <Link style={{ color: '#009900', weight: 'bold' }} to=\"/addJob\"><i className=\"material-icons\"><h2> add</h2></i></Link>\n                            </Tooltip>\n                        </ListItem>\n                    </List>\n                </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={12} md={12} lg={12}>\n                        <Paper>\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                            <TableCell>Title</TableCell>\n                                            <TableCell>Date of posting</TableCell>\n                                            <TableCell>Number of Applicants</TableCell>\n                                            <TableCell>Remaining Number of Positions</TableCell>\n                                            <TableCell></TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.jobs.filter(item => item.recruiter === userid && item.numpos < item.posmax).map((job,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{job.title}</TableCell>\n                                            <TableCell>{job.dateOfPost.substring(0,10)}</TableCell>\n                                            <TableCell>{job.numapp}</TableCell>\n                                            <TableCell>{job.posmax - job.numpos}</TableCell>\n                                            \n                                                <Link\n                                                    to={{\n                                                        pathname: \"/appList\",\n                                                        state: job._id // data array of objects\n                                                    }}\n                                                    >View applications</Link>\n                                                \n                                            <TableCell>\n                                                <Dropdown>\n                                                    <Dropdown.Toggle variant=\"secondary\"/>\n                                                    <Dropdown.Menu>\n                                                        <Dropdown.Item>\n                                                            <Tooltip title=\"Delete Job\" aria-label=\"delete\">\n                                                                <button\n                                                                    className=\"btn waves-effect waves-light hoverable blue accent-3\" \n                                                                    onClick={() => this.deljob(job._id)}>\n                                                                    <i \n                                                                    style={{\n                                                                        color: \"#FF0000\",\n                                                                        }}\n                                                                        className=\"material-icons\">delete</i> Delete\n                                                                </button> \n                                                            </Tooltip>\n                                                        </Dropdown.Item>\n                                                        <Dropdown.Item>\n                                                            <Tooltip title=\"Edit Job\" aria-label=\"edit\">\n                                                                <button\n                                                                    className=\"btn waves-effect waves-light hoverable blue accent-3\" \n                                                                    onClick={() => this.editJob(job)}>\n                                                                    <i \n                                                                    style={{\n                                                                        color: \"#0000FF\",\n                                                                        }}\n                                                                        className=\"material-icons\">edit</i>Edit\n                                                                </button>\n                                                            </Tooltip>\n                                                        </Dropdown.Item>\n                                                    </Dropdown.Menu>\n                                                </Dropdown>\n                                                 \n                                            </TableCell>\n                                            <TableCell>                   \n                                            <div>\n                                            { !this.state.showform || this.state.editing !== job._id? \n                                                <div></div>\n                                            : \n                                                <div>\n                                                    <br></br>\n                                                    <form noValidate onSubmit={this.onSubmit}>\n                                                        <div className=\"input-field col s12\">\n                                                            <label htmlFor=\"appmax\">Maximum number of applications allowed</label><br></br>\n                                                            <input\n                                                                onChange={this.onChange}\n                                                                value={this.state.appmax}\n                                                                id=\"appmax\"\n                                                                type=\"number\"\n                                                                min=\"0\"\n                                                            />\n                                                        </div>\n                                                        <div className=\"input-field col s12\">\n                                                            <label htmlFor=\"posmax\">Maximum number of positions available</label><br></br>\n                                                            <input\n                                                                onChange={this.onChange}\n                                                                value={this.state.posmax}\n                                                                id=\"posmax\"\n                                                                type=\"number\"\n                                                                min=\"0\"\n                                                            />\n                                                        </div>\n                                                        <div className=\"input-field col s12\">\n                                                            <label htmlFor=\"deadline\">Deadline for application</label><br></br>\n                                                            <input\n                                                                onChange={this.onChange}\n                                                                value={this.state.deadline}\n                                                                id=\"deadline\"\n                                                                type=\"date\"\n                                                            />\n                                                        </div>\n                                                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                                                        <button\n                                                        style={{\n                                                            color: \"#0000FF\",\n                                                            }}\n                                                            className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                            onClick={() => this.onBack()}>\n                                                            <b>Back</b>\n                                                        </button>\n                                                        <button\n                                                        style={{\n                                                            color: \"#009900\",\n                                                            }}\n                                                            className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                            onClick={() => this.editJobSubmit(job)}>\n                                                            <b>Save</b>\n                                                        </button>\n                                                        </div>\n                                                    </form>\n                                                </div>  \n                                            }\n                                            </div>\n                                            </TableCell>\n                                        </TableRow> \n                                ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        }\n        return (\n            <div style={{ height: \"75vh\" }} className=\"valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    {MyActiveJobs}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMyActiveJobs.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(MyActiveJobs);","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\n\n\nclass AppList extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            userdetails: [],\n            users: [],\n            jobs: [],\n            applications: [],\n            rating: 0,\n            sortbyname:true,\n            sortbydateofapply:true,\n            sortbyrating:true\n        };\n        this.renderNameIcon = this.renderNameIcon.bind(this);\n        this.renderDateOfApplyIcon = this.renderDateOfApplyIcon.bind(this);\n        this.renderRatingIcon = this.renderRatingIcon.bind(this);\n        this.sortByName = this.sortByName.bind(this);\n        this.sortByDateOfApply = this.sortByDateOfApply.bind(this);\n        this.sortByRating = this.sortByRating.bind(this);\n        this.accept = this.accept.bind(this);\n    }\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        axios.get('http://localhost:4000/user/'+ user.id)\n                .then(response => {\n                    this.setState({userdetails: response.data});\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n        axios.get('http://localhost:4000/job/get_jobs')\n            .then(response => {\n                this.setState({jobs: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/user/')\n            .then(response => {\n                this.setState({users: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/application/get_applications')\n            .then(response => {\n                this.setState({applications: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    getjob(jobId)\n    {\n        let job = this.state.jobs.filter(item => item._id === jobId)[0];\n        return job;\n    }\n\n    getapplicant(applicantId)\n    {\n        let applicant = this.state.users.filter(item => item._id === applicantId)[0];\n        return applicant;\n    }\n\n    sortByName(){\n        var array = this.state.applications;\n        var flag = this.state.sortbyname;\n        let uusers = this.state.users;\n        function getapplicant(applicantId)\n        {\n            let applicant = uusers.filter(item => item._id === applicantId)[0];\n            return applicant;\n        }\n        array.sort(function(a, b) {\n            console.log(a.applicantId);\n            let aapp = getapplicant(a.applicantId);\n            let bapp = getapplicant(b.applicantId);\n            if(aapp.name !== undefined && bapp.name !== undefined){\n                return (1 - +flag*2) * aapp.name.localeCompare(bapp.name);\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            applications:array,\n            sortbyname:!this.state.sortbyname,\n        })\n    }\n\n    sortByDateOfApply(){\n        var array = this.state.applications;\n        var flag = this.state.sortbydateofapply;\n        array.sort(function(a, b) {\n            if(a.dateOfApply !== undefined && b.dateOfApply !== undefined){\n                return (1 - +flag*2) * (new Date(a.dateOfApply) - new Date(b.dateOfApply));\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            applications:array,\n            sortbydateofapply:!this.state.sortbydateofapply,\n        })\n    }\n\n    sortByRating(){\n        var array = this.state.applications;\n        var flag = this.state.sortbyrating;\n        let uusers = this.state.users;\n        function getapplicant(applicantId)\n        {\n            let applicant = uusers.filter(item => item._id === applicantId)[0];\n            return applicant;\n        }\n        array.sort(function(a, b) {\n            let aapp = getapplicant(a.applicantId);\n            let bapp = getapplicant(b.applicantId);\n            if(aapp.rating !== undefined && bapp.rating !== undefined){\n                return (1 - +flag*2) * (+aapp.rating - +bapp.rating);\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            applications:array,\n            sortbyrating:!this.state.sortbyrating,\n        })\n    }\n\n    renderNameIcon(){\n        if(this.state.sortbyname){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    renderDateOfApplyIcon(){\n        if(this.state.sortbydateofapply){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    renderRatingIcon(){\n        if(this.state.sortbyrating){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    shortlist(application) {\n        const editApplication = {\n            status: \"Shortlisted\"\n        };\n\n        axios\n            .put('http://localhost:4000/application/edit_application/' + application._id, editApplication)\n            .then(response => {\n                console.log(editApplication);\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n            window.location.reload();\n    }\n\n    accept(application) {\n        let job = this.getjob(application.jobId);\n        if(job.numpos === job.posmax)\n        {\n            alert(\"All positions are filled!\");\n            return;\n        }\n        else if(job.numpos === job.posmax - 1)\n        {\n            this.state.applications.filter(item => item.applicantId !== application.applicantId && item.jobId === application.jobId && item.status !== \"Deleted\" && item.status !== \"Accepted\").forEach(\n                function(appli)\n                {\n                    // let temp = job;\n                    const tempAppli = {\n                        status: \"Rejected\"\n                    }\n                    // let newNumApp = +temp.numapp - 1;\n                    // if(newNumApp < 0) newNumApp = 0;\n                    // const tempJob = {\n                    //     numapp: newNumApp\n                    // }\n                    axios\n                        .put('http://localhost:4000/application/edit_application/' + appli._id, tempAppli)\n                        .then(response => {\n                            console.log(tempAppli);\n                        })\n                        .catch(function(error) {\n                            console.log(error);\n                        })\n                    // axios\n                    //     .put('http://localhost:4000/job/edit_job/' + temp._id, tempJob)\n                    //     .then(response => {\n                    //         console.log(tempJob);\n                    //     })\n                    //     .catch(function(error) {\n                    //         console.log(error);\n                    //     })\n                })\n        }\n        let nnumpos = +job.numpos + 1;\n\n        const editApplicant = {\n            working: true,\n            numapp: 0\n        };\n\n        const editJob = {\n            numpos: nnumpos\n        };\n\n        const editApplication = {\n            status: \"Accepted\",\n            doj: new Date()\n        };\n\n        axios\n            .put('http://localhost:4000/job/edit_job/' + job._id, editJob)\n            .then(response => {\n                console.log(editJob);\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n\n        axios\n            .put('http://localhost:4000/application/edit_application/' + application._id, editApplication)\n            .then(response => {\n                console.log(editApplication);\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        \n        axios\n            .put('http://localhost:4000/user/edit_profile/' + application.applicantId, editApplicant)\n            .then(response => {\n                console.log(editApplicant);\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        let alljobs = this.state.jobs;\n        this.state.applications.filter(item => item.applicantId === application.applicantId && item._id !== application._id && item.status !== \"Deleted\").forEach(\n            function(appli)\n            {\n                // let appliJob = alljobs.filter(item => item._id === appli.jobId)[0];\n                const editAppli = {\n                    status: \"Rejected\"\n                }\n                // let napp = +appliJob.numapp - 1;\n                // if(napp < 0) napp = 0;\n                // const editAppliJob = {\n                //     numapp: napp\n                // }\n                axios\n                    .put('http://localhost:4000/application/edit_application/' + appli._id, editAppli)\n                    .then(response => {\n                        console.log(editAppli);\n                    })\n                    .catch(function(error) {\n                        console.log(error);\n                    })\n                // axios\n                //     .put('http://localhost:4000/job/edit_job/' + appliJob._id, editAppliJob)\n                //     .then(response => {\n                //         console.log(editAppliJob);\n                //     })\n                //     .catch(function(error) {\n                //         console.log(error);\n                //     })\n            })\n\n        this.props.history.push('/appList');\n        this.props.history.push('/');\n        this.props.history.goBack();\n    }\n\n    reject(application) {\n        // const { user } = this.props.auth;\n        // let job = this.getjob(application.jobId);\n        let applicant = this.getapplicant(application.applicantId);\n        // let job = this.getjob(application.jobId);\n        let nnumapp = +applicant.numapp - 1;\n        // let jnumapp = +job.numapp - 1;\n\n        if(nnumapp < 0) nnumapp = 0;\n        // if(jnumapp < 0) jnumapp = 0;\n\n        const editApplicant = {\n            numapp: nnumapp\n        };\n\n        const editApplication = {\n            status: \"Rejected\"\n        };\n\n        // const editJob = {\n        //     numapp: jnumapp\n        // };\n\n        axios\n            .put('http://localhost:4000/application/edit_application/' + application._id, editApplication)\n            .then(response => {\n                console.log(editApplication);\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n\n        // axios\n        //     .put('http://localhost:4000/job/edit_job/' + job._id, editJob)\n        //     .then(response => {\n        //         console.log(editJob);\n        //     })\n        //     .catch(function(error) {\n        //         console.log(error);\n        //     })\n        \n        axios\n            .put('http://localhost:4000/user/edit_profile/' + application.applicantId, editApplicant)\n            .then(response => {\n                console.log(editApplicant);\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n\n        this.props.history.push('/appList');\n        this.props.history.push('/appList');\n        this.props.history.goBack();;\n    }\n\n    render() \n    {\n        const { user } = this.props.auth;\n        const userRole = this.state.userdetails.role;\n        let Applications;\n        if(userRole === \"recruiter\") {\n            Applications =\n            <div>\n                <Grid>\n                <Grid item xs={12} md={12} lg={12}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <ListItem text>\n                            <h3>Applications</h3>\n                        </ListItem>\n                    </List>\n                </Grid>\n                </Grid>\n                <Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                        {/* <Paper> */}\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                            <TableCell>Title</TableCell>\n                                            <TableCell>Applicant <Button onClick={this.sortByName}>{this.renderNameIcon()}</Button></TableCell>\n                                            <TableCell>Appl. Rating <Button onClick={this.sortByRating}>{this.renderRatingIcon()}</Button></TableCell>\n                                            <TableCell>Appl. Skills</TableCell>\n                                            <TableCell><ul><li>Education</li></ul></TableCell>\n                                            <TableCell>SOP</TableCell>\n                                            <TableCell>Status</TableCell>\n                                            <TableCell>Date of Application <Button onClick={this.sortByDateOfApply}>{this.renderDateOfApplyIcon()}</Button></TableCell>\n                                            <TableCell></TableCell>\n                                            <TableCell></TableCell>\n                                            <TableCell></TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.applications.filter(item => item.status !== \"Rejected\" && item.recruiterId === user.id && item.jobId === this.props.location.state).map((application,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{application.title}</TableCell>\n                                            {this.state.users.filter(item => item._id === application.applicantId).map((applicant,innd) => (\n                                                <TableCell key={innd}>{applicant.name}</TableCell>\n                                            ))}\n                                            {this.state.users.filter(item => item._id === application.applicantId).map((applicant,innd) => (\n                                                <TableCell key={innd}>{applicant.rating ? applicant.rating.toFixed(1): \"\"}<i className=\"material-icons\"><h6> star</h6></i></TableCell>\n                                            ))}\n                                            {this.state.users.filter(item => item._id === application.applicantId).map((applicant,innd) => (\n                                                <TableCell key={innd}>{applicant.skills.join(\", \")}</TableCell>\n                                            ))}\n                                            {this.state.users.filter(item => item._id === application.applicantId).map((applicant,innd) => (\n                                                <TableCell key={innd}>\n                                                    {\n                                                        applicant.education.map(ed => (\n                                                            <ul>\n                                                                <li>School: {ed.school}</li>\n                                                                <li>Degree: {ed.degree}</li>\n                                                                <li>Start date: {ed.startdate ? ed.startdate.toString().substring(0, 10): \"NA\"}</li>\n                                                                <li>End date: {ed.enddate ? ed.enddate.toString().substring(0, 10):\"NA\"}</li>\n                                                            </ul>\n                                                        ))\n                                                    }\n                                                </TableCell>\n                                            ))}\n                                            <TableCell>{application.sop}</TableCell>\n                                            <TableCell>{application.status}</TableCell>\n                                            <TableCell>{application.dateOfApplication.substring(0, 10)}</TableCell>\n                                           \n                                            {application.status === \"Applied\"?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"Shortlist Candidate\" aria-label=\"apply\">\n                                                    <button\n                                                        className=\"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.shortlist(application)}>\n                                                        Shortlist\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            :\n\n                                            <div></div>\n\n                                            }\n                                            {application.status === \"Shortlisted\"?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"Accept Candidate\" aria-label=\"apply\">\n                                                    <button\n                                                        className=\"btn btn-success btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.accept(application)}>\n                                                        Accept\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            :\n\n                                            <div></div>\n\n                                            }\n                                            {application.status === \"Accepted\"?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"Reject Candidate\" aria-label=\"apply\">\n                                                    <button\n                                                        className=\"btn btn-secondary btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        >\n                                                        Accepted\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            :\n\n                                            <TableCell>\n                                                <Tooltip title=\"Rate this job\" aria-label=\"apply\">\n                                                    <button\n                                                        className=\"btn btn-danger btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.reject(application)}>\n                                                        Reject\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            }\n                                            \n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        {/* </Paper>                */}\n                    </Grid>    \n                </Grid>            \n            </div>\n        }\n        return (\n            <div style={{ height: \"75vh\" }} className=\"valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                {Applications}\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAppList.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(AppList);","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport Rating from '@material-ui/lab/Rating';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\n\nclass Employees extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            userdetails: [],\n            users: [],\n            jobs: [],\n            applications: [],\n            rating: 0,\n            sortbyname:true,\n            sortbytitle:true,\n            sortbyrating:true,\n            sortbydateofjoin: true\n        };\n        this.giveRating = this.giveRating.bind(this);\n        this.renderNameIcon = this.renderNameIcon.bind(this);\n        this.sortByName = this.sortByName.bind(this);\n        this.renderTitleIcon = this.renderTitleIcon.bind(this);\n        this.sortByTitle = this.sortByTitle.bind(this);\n        this.renderRatingIcon = this.renderRatingIcon.bind(this);\n        this.sortByRating = this.sortByRating.bind(this);\n        this.sortByDateOfJoin = this.sortByDateOfJoin.bind(this);\n        this.renderDateOfJoinIcon = this.renderDateOfJoinIcon.bind(this);\n    }\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        axios.get('http://localhost:4000/user/'+ user.id)\n            .then(response => {\n                this.setState({userdetails: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/job/get_jobs')\n            .then(response => {\n                this.setState({jobs: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/user/')\n            .then(response => {\n                this.setState({users: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/application/get_applications')\n            .then(response => {\n                this.setState({applications: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    rated(application) {\n        if(application.applicantRating !== -1) return true;\n        return false;\n    }\n\n    giveRating(e) {\n        console.log(e.target.value);\n        this.setState({rating: e.target.value});\n    }\n\n    getjob(jobId)\n    {\n        let job = this.state.jobs.filter(item => item._id === jobId)[0];\n        return job;\n    }\n\n    getapplicant(applicantId)\n    {\n        let applicant = this.state.users.filter(item => item._id === applicantId)[0];\n        console.log(applicant);\n        return applicant;\n    }\n\n    sortByRating(){\n        var array = this.state.applications;\n        var flag = this.state.sortbyrating;\n        let uusers = this.state.users;\n        function getapplicant(applicantId)\n        {\n            let applicant = uusers.filter(item => item._id === applicantId)[0];\n            return applicant;\n        }\n        array.sort(function(a, b) {\n            let aapp = getapplicant(a.applicantId);\n            let bapp = getapplicant(b.applicantId);\n            if(aapp.rating !== undefined && bapp.rating !== undefined){\n                return (1 - +flag*2) * (+aapp.rating - +bapp.rating);\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            applications:array,\n            sortbyrating:!this.state.sortbyrating,\n        })\n    }\n\n    renderRatingIcon(){\n        if(this.state.sortbyrating){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    sortByName(){\n        var array = this.state.applications;\n        var flag = this.state.sortbyname;\n        let uusers = this.state.users;\n        function getapplicant(applicantId)\n        {\n            let applicant = uusers.filter(item => item._id === applicantId)[0];\n            return applicant;\n        }\n        array.sort(function(a, b) {\n            console.log(a.applicantId);\n            let aapp = getapplicant(a.applicantId);\n            let bapp = getapplicant(b.applicantId);\n            if(aapp !== undefined && bapp !== undefined && aapp.name !== undefined && bapp.name !== undefined){\n                return (1 - +flag*2) * aapp.name.localeCompare(bapp.name);\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            applications:array,\n            sortbyname:!this.state.sortbyname,\n        })\n    }\n\n    renderNameIcon(){\n        if(this.state.sortbyname){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    sortByTitle(){\n        var array = this.state.applications;\n        var flag = this.state.sortbytitle;\n        let jjobs = this.state.jobs;\n        function getjob(jobId)\n        {\n            let job = jjobs.filter(item => item._id === jobId)[0];\n            return job;\n        }\n        array.sort(function(a, b) {\n            let aapp = getjob(a.jobId);\n            let bapp = getjob(b.jobId);\n            if(aapp.title !== undefined && bapp.title !== undefined){\n                return (1 - +flag*2) * aapp.title.localeCompare(bapp.title);\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            applications:array,\n            sortbytitle:!this.state.sortbytitle,\n        })\n    }\n\n    renderTitleIcon(){\n        if(this.state.sortbytitle){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    sortByDateOfJoin(){\n        var array = this.state.applications;\n        var flag = this.state.sortbydateofjoin;\n        array.sort(function(a, b) {\n            if(a.dateOfJoin !== undefined && b.dateOfJoin !== undefined){\n                return (1 - +flag*2) * (new Date(a.dateOfJoin) - new Date(b.dateOfJoin));\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            applications:array,\n            sortbydateofjoin:!this.state.sortbydateofjoin,\n        })\n    }\n\n    renderDateOfJoinIcon(){\n        if(this.state.sortbydateofjoin){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    rate(application)\n    {\n        let applicant = this.getapplicant(application.applicantId);\n        console.log(applicant._id);\n        let nrate = applicant.numrate;\n        nrate = nrate + 1;\n        let nrating = 0;\n        if(applicant.rating === -1)\n        {\n            nrating = +this.state.rating;\n        }\n        else\n        {\n            nrating = ((+applicant.rating * (+nrate-1)) + +this.state.rating) / (+nrate);\n        }\n\n        const editApplicant = {\n            rating: nrating,\n            numrate: nrate\n        };\n\n        const editApplication = {\n            applicantRating: nrating\n        };\n\n        axios\n            .put('http://localhost:4000/user/edit_profile/' + applicant._id, editApplicant)\n            .then(response => {\n                console.log(editApplicant);\n                alert(\"Applicant rated successfully!\");\n            })\n            .catch(function(error) {\n                console.log(error);\n                alert(\"Applicant could not be rated.\");\n            })\n\n        axios\n            .put('http://localhost:4000/application/edit_application/' + application._id, editApplication)\n            .then(response => {\n                console.log(editApplication);\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n\n        window.location.reload();\n    \n    }\n\n    render() \n    {\n        const { user } = this.props.auth;\n        const userRole = this.state.userdetails.role;\n        let Myemployees;\n        if(userRole === \"recruiter\") {\n            Myemployees =\n            <div>\n                <Grid container>\n                <Grid item xs={12} md={3} lg={3}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <ListItem text>\n                            <h3>Employees</h3>\n                        </ListItem>\n                    </List>\n                </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={12} md={12} lg={12}>\n                        <Paper>\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Name <Button onClick={this.sortByName}>{this.renderNameIcon()}</Button></TableCell>\n                                        <TableCell>Employee Rating <Button onClick={this.sortByRating}>{this.renderRatingIcon()}</Button></TableCell>\n                                        <TableCell>Job Title <Button onClick={this.sortByTitle}>{this.renderTitleIcon()}</Button></TableCell>\n                                        <TableCell>Job Type</TableCell>\n                                        <TableCell>DOJ <Button onClick={this.sortByDateOfJoin}>{this.renderDateOfJoinIcon()}</Button></TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.applications.filter(item => item.status === \"Accepted\" && item.recruiterId === user.id).map((application,ind) => (\n                                        <TableRow key={ind}>\n                                            \n                                            {this.state.users.filter(item => item._id === application.applicantId).map((applicant,innd) => (\n                                                <TableCell key={innd}>{applicant.name}</TableCell>\n                                            ))}\n\n                                            {this.state.users.filter(item => item._id === application.applicantId).map((applicant,innd) => (\n                                                <TableCell key={innd}>{applicant.rating ? applicant.rating.toFixed(1): \"\"}<i className=\"material-icons\"><h6> star</h6></i></TableCell>\n                                            ))}\n                                            \n                                            {this.state.jobs.filter(item => item._id === application.jobId).map((job,innnd) => (\n                                                <TableCell key={innnd}>\n                                                    {job.title}\n                                                </TableCell>\n                                            ))}\n\n                                            {this.state.jobs.filter(item => item._id === application.jobId).map((job,innnd) => (\n                                                <TableCell key={innnd}>\n                                                    {job.type}\n                                                </TableCell>\n                                            ))}\n                                            <TableCell>{application.doj?application.doj.substring(0, 10):\"\"}</TableCell>\n                                            {!this.rated(application)?\n                                            \n                                            <TableCell>\n                                                <Rating\n                                                    value={this.state.rating}\n                                                    onChange={this.giveRating}\n                                                />\n                                                <Tooltip title=\"Rate this employee\" aria-label=\"rate\">\n                                                    <button\n                                                        className=\"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.rate(application)}>\n                                                        Rate Employee\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            :\n\n                                            <TableCell>\n                                                <div>Rated</div>                                           \n                                            </TableCell>\n\n                                            }\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        }\n        return (\n            <div style={{ height: \"75vh\" }} className=\"valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    {Myemployees}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nEmployees.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(Employees);","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport UsersList from './components/Users/UsersList'\nimport Home from './components/Common/Home'\nimport Register from './components/Common/Register'\nimport Login from './components/Common/Login'\nimport Navbar from './components/templates/Navbar'\nimport Profile from './components/Users/Profile'\nimport EditProfile from './components/Users/EditProfile'\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/Users/Dashboard\";\nimport AddEducation from \"./components/Applicant/AddEducation\";\nimport JobsList from \"./components/Applicant/JobsList\";\nimport MyApplications from \"./components/Applicant/MyApplications\";\nimport CreateJob from \"./components/Recruiter/CreateJob\";\nimport MyActiveJobs from \"./components/Recruiter/MyActiveJobs\";\nimport AppList from \"./components/Recruiter/AppList\";\nimport Employees from \"./components/Recruiter/Employees\";\n\n\n// document.body.style = 'background: #D5D5D5;';\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div>\n          <Navbar/>\n          <br/>\n          <Route path=\"/\" exact component={Home}/>\n          <Route path=\"/users\" exact component={UsersList}/>\n          <Route path=\"/register\" component={Register}/>\n          <Route path=\"/login\" component={Login} />\n          <Switch>\n              <PrivateRoute path=\"/dashboard\" exact component={Dashboard} />\n              <PrivateRoute path=\"/profile\" exact component={Profile} />\n              <PrivateRoute path=\"/editprofile\" exact component={EditProfile} />\n              <PrivateRoute path=\"/addeducation\" exact component={AddEducation} />\n              <PrivateRoute path=\"/addJob\" exact component={CreateJob} />\n              <PrivateRoute path=\"/viewMyActiveJobs\" exact component={MyActiveJobs} />\n              <PrivateRoute path=\"/employees\" exact component={Employees} />\n              <PrivateRoute path=\"/jobsList\" exact component={JobsList} />\n              <PrivateRoute path=\"/myApplications\" exact component={MyApplications} />\n              <PrivateRoute path=\"/appList\" exact component={AppList} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}